<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yycoin.vo.TCenterBankMapper" >
  <resultMap id="BaseResultMap" type="com.yycoin.vo.TCenterBank" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="DUTYID" property="dutyid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="DOUBLE" />
    <result column="mtype" property="mtype" jdbcType="INTEGER" />
    <result column="bankNo" property="bankno" jdbcType="VARCHAR" />
    <result column="bankprovince" property="bankprovince" jdbcType="VARCHAR" />
    <result column="bankcity" property="bankcity" jdbcType="VARCHAR" />
    <result column="paytype" property="paytype" jdbcType="CHAR" />
    <result column="bankname" property="bankname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, name, DUTYID, type, description, total, mtype, bankNo, bankprovince, bankcity, 
    paytype, bankname
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yycoin.vo.TCenterBankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_center_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="endRecordNum > 0" >
      limit ${startRecordNum},${numberOfRecordsToSelect}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_center_bank
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_center_bank
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yycoin.vo.TCenterBankExample" >
    delete from t_center_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yycoin.vo.TCenterBank" >
    insert into t_center_bank (ID, name, DUTYID, 
      type, description, total, 
      mtype, bankNo, bankprovince, 
      bankcity, paytype, bankname
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{dutyid,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{total,jdbcType=DOUBLE}, 
      #{mtype,jdbcType=INTEGER}, #{bankno,jdbcType=VARCHAR}, #{bankprovince,jdbcType=VARCHAR}, 
      #{bankcity,jdbcType=VARCHAR}, #{paytype,jdbcType=CHAR}, #{bankname,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yycoin.vo.TCenterBank" >
    insert into t_center_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="dutyid != null" >
        DUTYID,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="mtype != null" >
        mtype,
      </if>
      <if test="bankno != null" >
        bankNo,
      </if>
      <if test="bankprovince != null" >
        bankprovince,
      </if>
      <if test="bankcity != null" >
        bankcity,
      </if>
      <if test="paytype != null" >
        paytype,
      </if>
      <if test="bankname != null" >
        bankname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dutyid != null" >
        #{dutyid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="mtype != null" >
        #{mtype,jdbcType=INTEGER},
      </if>
      <if test="bankno != null" >
        #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="bankprovince != null" >
        #{bankprovince,jdbcType=VARCHAR},
      </if>
      <if test="bankcity != null" >
        #{bankcity,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null" >
        #{paytype,jdbcType=CHAR},
      </if>
      <if test="bankname != null" >
        #{bankname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yycoin.vo.TCenterBankExample" resultType="java.lang.Integer" >
    select count(*) from t_center_bank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_center_bank
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.dutyid != null" >
        DUTYID = #{record.dutyid,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=DOUBLE},
      </if>
      <if test="record.mtype != null" >
        mtype = #{record.mtype,jdbcType=INTEGER},
      </if>
      <if test="record.bankno != null" >
        bankNo = #{record.bankno,jdbcType=VARCHAR},
      </if>
      <if test="record.bankprovince != null" >
        bankprovince = #{record.bankprovince,jdbcType=VARCHAR},
      </if>
      <if test="record.bankcity != null" >
        bankcity = #{record.bankcity,jdbcType=VARCHAR},
      </if>
      <if test="record.paytype != null" >
        paytype = #{record.paytype,jdbcType=CHAR},
      </if>
      <if test="record.bankname != null" >
        bankname = #{record.bankname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_center_bank
    set ID = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      DUTYID = #{record.dutyid,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=DOUBLE},
      mtype = #{record.mtype,jdbcType=INTEGER},
      bankNo = #{record.bankno,jdbcType=VARCHAR},
      bankprovince = #{record.bankprovince,jdbcType=VARCHAR},
      bankcity = #{record.bankcity,jdbcType=VARCHAR},
      paytype = #{record.paytype,jdbcType=CHAR},
      bankname = #{record.bankname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yycoin.vo.TCenterBank" >
    update t_center_bank
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dutyid != null" >
        DUTYID = #{dutyid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="mtype != null" >
        mtype = #{mtype,jdbcType=INTEGER},
      </if>
      <if test="bankno != null" >
        bankNo = #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="bankprovince != null" >
        bankprovince = #{bankprovince,jdbcType=VARCHAR},
      </if>
      <if test="bankcity != null" >
        bankcity = #{bankcity,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null" >
        paytype = #{paytype,jdbcType=CHAR},
      </if>
      <if test="bankname != null" >
        bankname = #{bankname,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yycoin.vo.TCenterBank" >
    update t_center_bank
    set name = #{name,jdbcType=VARCHAR},
      DUTYID = #{dutyid,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      total = #{total,jdbcType=DOUBLE},
      mtype = #{mtype,jdbcType=INTEGER},
      bankNo = #{bankno,jdbcType=VARCHAR},
      bankprovince = #{bankprovince,jdbcType=VARCHAR},
      bankcity = #{bankcity,jdbcType=VARCHAR},
      paytype = #{paytype,jdbcType=CHAR},
      bankname = #{bankname,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>