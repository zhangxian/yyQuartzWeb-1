<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yycoin.vo.packageinfo.TCenterPackageItemMapper" >
  <resultMap id="BaseResultMap" type="com.yycoin.vo.packageinfo.TCenterPackageItem" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="packageId" property="packageid" jdbcType="VARCHAR" />
    <result column="outId" property="outid" jdbcType="VARCHAR" />
    <result column="baseId" property="baseid" jdbcType="VARCHAR" />
    <result column="productId" property="productid" jdbcType="VARCHAR" />
    <result column="productName" property="productname" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="value" property="value" jdbcType="DOUBLE" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="outTime" property="outtime" jdbcType="VARCHAR" />
    <result column="customerId" property="customerid" jdbcType="VARCHAR" />
    <result column="printText" property="printtext" jdbcType="VARCHAR" />
    <result column="emergency" property="emergency" jdbcType="INTEGER" />
    <result column="productImportId" property="productimportid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, packageId, outId, baseId, productId, productName, amount, price, value, description, 
    outTime, customerId, printText, emergency, productImportId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yycoin.vo.packageinfo.TCenterPackageItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_center_package_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="endRecordNum > 0" >
      limit ${startRecordNum},${numberOfRecordsToSelect}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_center_package_item
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_center_package_item
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yycoin.vo.packageinfo.TCenterPackageItemExample" >
    delete from t_center_package_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yycoin.vo.packageinfo.TCenterPackageItem" >
    insert into t_center_package_item (Id, packageId, outId, 
      baseId, productId, productName, 
      amount, price, value, 
      description, outTime, customerId, 
      printText, emergency, productImportId
      )
    values (#{id,jdbcType=INTEGER}, #{packageid,jdbcType=VARCHAR}, #{outid,jdbcType=VARCHAR}, 
      #{baseid,jdbcType=VARCHAR}, #{productid,jdbcType=VARCHAR}, #{productname,jdbcType=VARCHAR}, 
      #{amount,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{value,jdbcType=DOUBLE}, 
      #{description,jdbcType=VARCHAR}, #{outtime,jdbcType=VARCHAR}, #{customerid,jdbcType=VARCHAR}, 
      #{printtext,jdbcType=VARCHAR}, #{emergency,jdbcType=INTEGER}, #{productimportid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yycoin.vo.packageinfo.TCenterPackageItem" >
    insert into t_center_package_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="packageid != null" >
        packageId,
      </if>
      <if test="outid != null" >
        outId,
      </if>
      <if test="baseid != null" >
        baseId,
      </if>
      <if test="productid != null" >
        productId,
      </if>
      <if test="productname != null" >
        productName,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="outtime != null" >
        outTime,
      </if>
      <if test="customerid != null" >
        customerId,
      </if>
      <if test="printtext != null" >
        printText,
      </if>
      <if test="emergency != null" >
        emergency,
      </if>
      <if test="productimportid != null" >
        productImportId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="packageid != null" >
        #{packageid,jdbcType=VARCHAR},
      </if>
      <if test="outid != null" >
        #{outid,jdbcType=VARCHAR},
      </if>
      <if test="baseid != null" >
        #{baseid,jdbcType=VARCHAR},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=VARCHAR},
      </if>
      <if test="productname != null" >
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="value != null" >
        #{value,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="outtime != null" >
        #{outtime,jdbcType=VARCHAR},
      </if>
      <if test="customerid != null" >
        #{customerid,jdbcType=VARCHAR},
      </if>
      <if test="printtext != null" >
        #{printtext,jdbcType=VARCHAR},
      </if>
      <if test="emergency != null" >
        #{emergency,jdbcType=INTEGER},
      </if>
      <if test="productimportid != null" >
        #{productimportid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yycoin.vo.packageinfo.TCenterPackageItemExample" resultType="java.lang.Integer" >
    select count(*) from t_center_package_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_center_package_item
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.packageid != null" >
        packageId = #{record.packageid,jdbcType=VARCHAR},
      </if>
      <if test="record.outid != null" >
        outId = #{record.outid,jdbcType=VARCHAR},
      </if>
      <if test="record.baseid != null" >
        baseId = #{record.baseid,jdbcType=VARCHAR},
      </if>
      <if test="record.productid != null" >
        productId = #{record.productid,jdbcType=VARCHAR},
      </if>
      <if test="record.productname != null" >
        productName = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=DOUBLE},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.outtime != null" >
        outTime = #{record.outtime,jdbcType=VARCHAR},
      </if>
      <if test="record.customerid != null" >
        customerId = #{record.customerid,jdbcType=VARCHAR},
      </if>
      <if test="record.printtext != null" >
        printText = #{record.printtext,jdbcType=VARCHAR},
      </if>
      <if test="record.emergency != null" >
        emergency = #{record.emergency,jdbcType=INTEGER},
      </if>
      <if test="record.productimportid != null" >
        productImportId = #{record.productimportid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_center_package_item
    set Id = #{record.id,jdbcType=INTEGER},
      packageId = #{record.packageid,jdbcType=VARCHAR},
      outId = #{record.outid,jdbcType=VARCHAR},
      baseId = #{record.baseid,jdbcType=VARCHAR},
      productId = #{record.productid,jdbcType=VARCHAR},
      productName = #{record.productname,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      value = #{record.value,jdbcType=DOUBLE},
      description = #{record.description,jdbcType=VARCHAR},
      outTime = #{record.outtime,jdbcType=VARCHAR},
      customerId = #{record.customerid,jdbcType=VARCHAR},
      printText = #{record.printtext,jdbcType=VARCHAR},
      emergency = #{record.emergency,jdbcType=INTEGER},
      productImportId = #{record.productimportid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yycoin.vo.packageinfo.TCenterPackageItem" >
    update t_center_package_item
    <set >
      <if test="packageid != null" >
        packageId = #{packageid,jdbcType=VARCHAR},
      </if>
      <if test="outid != null" >
        outId = #{outid,jdbcType=VARCHAR},
      </if>
      <if test="baseid != null" >
        baseId = #{baseid,jdbcType=VARCHAR},
      </if>
      <if test="productid != null" >
        productId = #{productid,jdbcType=VARCHAR},
      </if>
      <if test="productname != null" >
        productName = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="outtime != null" >
        outTime = #{outtime,jdbcType=VARCHAR},
      </if>
      <if test="customerid != null" >
        customerId = #{customerid,jdbcType=VARCHAR},
      </if>
      <if test="printtext != null" >
        printText = #{printtext,jdbcType=VARCHAR},
      </if>
      <if test="emergency != null" >
        emergency = #{emergency,jdbcType=INTEGER},
      </if>
      <if test="productimportid != null" >
        productImportId = #{productimportid,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yycoin.vo.packageinfo.TCenterPackageItem" >
    update t_center_package_item
    set packageId = #{packageid,jdbcType=VARCHAR},
      outId = #{outid,jdbcType=VARCHAR},
      baseId = #{baseid,jdbcType=VARCHAR},
      productId = #{productid,jdbcType=VARCHAR},
      productName = #{productname,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      value = #{value,jdbcType=DOUBLE},
      description = #{description,jdbcType=VARCHAR},
      outTime = #{outtime,jdbcType=VARCHAR},
      customerId = #{customerid,jdbcType=VARCHAR},
      printText = #{printtext,jdbcType=VARCHAR},
      emergency = #{emergency,jdbcType=INTEGER},
      productImportId = #{productimportid,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>